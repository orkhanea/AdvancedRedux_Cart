{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCartButtonState = {\n  toggleCart: false,\n  notification: null\n};\nconst cartButtonSlice = createSlice({\n  name: 'cartButton',\n  initialState: initialCartButtonState,\n  reducers: {\n    toggleCart(state) {\n      state.toggleCart = !state.toggleCart;\n    },\n\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n\n  }\n});\nconst initialCartState = {\n  totalProductCount: 0,\n  totalAmount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addToCart(state, action) {\n      const updatedTotalAmount = state.totalAmount + action.payload.price;\n      const updatedTotalProductCount = state.totalProductCount + action.payload.amount;\n      const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      const existngCartItem = state.cartItems[existingCartItemIndex];\n      let updatedItems;\n\n      if (existngCartItem) {\n        const updatedItem = { ...existngCartItem,\n          amount: existngCartItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.cartItems];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.cartItems.concat(action.payload);\n      }\n\n      state.cartItems = updatedItems;\n      state.totalAmount = updatedTotalAmount;\n      state.totalProductCount = updatedTotalProductCount;\n    },\n\n    removeFromCart(state, action) {\n      const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      const existingCartItem = state.cartItems[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n      const updatedTotalProductCount = state.totalProductCount - action.payload.amount;\n      let updatedItems;\n\n      if (existingCartItem && existingCartItem.amount > 1) {\n        const updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount - 1\n        };\n        updatedItems = [...state.cartItems];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else if (existingCartItem && existingCartItem.amount === 1) {\n        updatedItems = state.cartItems.filter(item => item.id !== action.payload.id);\n      }\n\n      state.cartItems = updatedItems;\n      state.totalAmount = updatedTotalAmount;\n      state.totalProductCount = updatedTotalProductCount;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartButton: cartButtonSlice.reducer,\n    cart: cartSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport const cartButtonActions = cartButtonSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCartButtonState","toggleCart","notification","cartButtonSlice","name","initialState","reducers","state","showNotification","action","status","payload","title","message","initialCartState","totalProductCount","totalAmount","cartItems","cartSlice","addToCart","updatedTotalAmount","price","updatedTotalProductCount","amount","existingCartItemIndex","findIndex","item","id","existngCartItem","updatedItems","updatedItem","concat","removeFromCart","existingCartItem","filter","store","reducer","cartButton","cart","cartActions","actions","cartButtonActions"],"sources":["/Users/orkhan/Downloads/01-starting-project-2/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst initialCartButtonState = { toggleCart: false, notification: null }\n\nconst cartButtonSlice = createSlice({\n\n    name: 'cartButton',\n    initialState: initialCartButtonState,\n    reducers: {\n        toggleCart(state) {\n            state.toggleCart = !state.toggleCart\n        },\n        showNotification(state, action){\n            state.notification = {status: action.payload.status, title: action.payload.title, message: action.payload.message}\n        }\n    }\n\n})\n\nconst initialCartState = { totalProductCount: 0, totalAmount: 0, cartItems: [] }\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: initialCartState,\n    reducers: {\n        addToCart(state, action) {\n\n            const updatedTotalAmount = state.totalAmount + action.payload.price\n            const updatedTotalProductCount = state.totalProductCount + action.payload.amount\n            const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id)\n            const existngCartItem = state.cartItems[existingCartItemIndex];\n            let updatedItems;\n\n            if (existngCartItem) {\n                const updatedItem = {\n                    ...existngCartItem,\n                    amount: existngCartItem.amount + action.payload.amount\n                };\n                updatedItems = [...state.cartItems];\n                updatedItems[existingCartItemIndex] = updatedItem\n            }\n            else {\n                updatedItems = state.cartItems.concat(action.payload);\n            }\n\n            state.cartItems = updatedItems\n            state.totalAmount = updatedTotalAmount\n            state.totalProductCount = updatedTotalProductCount\n\n        },\n        removeFromCart(state, action) {\n            const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id)\n            const existingCartItem = state.cartItems[existingCartItemIndex];\n            const updatedTotalAmount = state.totalAmount - existingCartItem.price\n            const updatedTotalProductCount = state.totalProductCount - action.payload.amount\n            let updatedItems;\n\n            if (existingCartItem && existingCartItem.amount > 1) {\n                const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 }\n                updatedItems = [...state.cartItems]\n                updatedItems[existingCartItemIndex] = updatedItem\n            }\n            else if (existingCartItem && existingCartItem.amount === 1) {\n                updatedItems = state.cartItems.filter(item => item.id !== action.payload.id)\n            }\n\n            state.cartItems = updatedItems\n            state.totalAmount = updatedTotalAmount\n            state.totalProductCount = updatedTotalProductCount\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer: {\n        cartButton: cartButtonSlice.reducer,\n        cart: cartSlice.reducer\n    }\n})\n\nexport const cartActions = cartSlice.actions;\nexport const cartButtonActions = cartButtonSlice.actions;\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module"}