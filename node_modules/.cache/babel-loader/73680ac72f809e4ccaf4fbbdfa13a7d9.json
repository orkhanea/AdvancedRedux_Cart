{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialCartButtonState = {\n  toggleCart: false\n};\nconst cartButtonSlice = createSlice({\n  name: 'cartButton',\n  initialState: initialCartButtonState,\n  reducers: {\n    toggleCart(state) {\n      state.toggleCart = !state.toggleCart;\n      console.log(state.toggleCart);\n    }\n\n  }\n});\nconst initialCartState = {\n  totalAmount: 0,\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addToCart(state, action) {\n      const updatedTotalAmount = action.payload.price * action.payload.quantity;\n      const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      const existngCartItem = state.cartItems[existingCartItemIndex];\n      let updatedItems;\n\n      if (existngCartItem) {\n        const updatedItem = { ...existngCartItem,\n          amount: existngCartItem.amount + action.payload.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.cartItems.concat(action.payload);\n      }\n\n      state.cartItems = updatedItems;\n      state.totalAmount = updatedTotalAmount;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    cartButton: cartButtonSlice.reducer,\n    cart: cartSlice.reducer\n  }\n});\nexport const cartActions = cartButtonSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialCartButtonState","toggleCart","cartButtonSlice","name","initialState","reducers","state","console","log","initialCartState","totalAmount","cartItems","cartSlice","addToCart","action","updatedTotalAmount","payload","price","quantity","existingCartItemIndex","findIndex","item","id","existngCartItem","updatedItems","updatedItem","amount","items","concat","store","reducer","cartButton","cart","cartActions","actions"],"sources":["/Users/orkhan/Downloads/01-starting-project-2/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from '@reduxjs/toolkit';\n\nconst initialCartButtonState = { toggleCart: false }\n\nconst cartButtonSlice = createSlice({\n\n    name: 'cartButton',\n    initialState: initialCartButtonState,\n    reducers: {\n        toggleCart(state) {\n            state.toggleCart = !state.toggleCart\n            console.log(state.toggleCart)\n        }\n    }\n\n})\n\nconst initialCartState = { totalAmount: 0, cartItems: [] }\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: initialCartState,\n    reducers: {\n        addToCart(state, action) {\n\n            const updatedTotalAmount = action.payload.price * action.payload.quantity\n            const existingCartItemIndex = state.cartItems.findIndex(item => item.id === action.payload.id)\n            const existngCartItem = state.cartItems[existingCartItemIndex];\n            let updatedItems;\n\n            if (existngCartItem) {\n                const updatedItem = {\n                    ...existngCartItem,\n                    amount: existngCartItem.amount + action.payload.amount\n                };\n                updatedItems = [...state.items];\n                updatedItems[existingCartItemIndex] = updatedItem\n            }\n            else {\n                updatedItems = state.cartItems.concat(action.payload);\n            }\n\n            state.cartItems = updatedItems\n            state.totalAmount = updatedTotalAmount\n\n        }\n    }\n})\n\nconst store = configureStore({\n    reducer: { \n        cartButton: cartButtonSlice.reducer,\n        cart: cartSlice.reducer\n    }\n})\n\nexport const cartActions = cartButtonSlice.actions;\nexport default store;"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,sBAAsB,GAAG;EAAEC,UAAU,EAAE;AAAd,CAA/B;AAEA,MAAMC,eAAe,GAAGH,WAAW,CAAC;EAEhCI,IAAI,EAAE,YAF0B;EAGhCC,YAAY,EAAEJ,sBAHkB;EAIhCK,QAAQ,EAAE;IACNJ,UAAU,CAACK,KAAD,EAAQ;MACdA,KAAK,CAACL,UAAN,GAAmB,CAACK,KAAK,CAACL,UAA1B;MACAM,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACL,UAAlB;IACH;;EAJK;AAJsB,CAAD,CAAnC;AAaA,MAAMQ,gBAAgB,GAAG;EAAEC,WAAW,EAAE,CAAf;EAAkBC,SAAS,EAAE;AAA7B,CAAzB;AACA,MAAMC,SAAS,GAAGb,WAAW,CAAC;EAC1BI,IAAI,EAAE,MADoB;EAE1BC,YAAY,EAAEK,gBAFY;EAG1BJ,QAAQ,EAAE;IACNQ,SAAS,CAACP,KAAD,EAAQQ,MAAR,EAAgB;MAErB,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeE,QAAjE;MACA,MAAMC,qBAAqB,GAAGb,KAAK,CAACK,SAAN,CAAgBS,SAAhB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACE,OAAP,CAAeM,EAA7D,CAA9B;MACA,MAAMC,eAAe,GAAGjB,KAAK,CAACK,SAAN,CAAgBQ,qBAAhB,CAAxB;MACA,IAAIK,YAAJ;;MAEA,IAAID,eAAJ,EAAqB;QACjB,MAAME,WAAW,GAAG,EAChB,GAAGF,eADa;UAEhBG,MAAM,EAAEH,eAAe,CAACG,MAAhB,GAAyBZ,MAAM,CAACE,OAAP,CAAeU;QAFhC,CAApB;QAIAF,YAAY,GAAG,CAAC,GAAGlB,KAAK,CAACqB,KAAV,CAAf;QACAH,YAAY,CAACL,qBAAD,CAAZ,GAAsCM,WAAtC;MACH,CAPD,MAQK;QACDD,YAAY,GAAGlB,KAAK,CAACK,SAAN,CAAgBiB,MAAhB,CAAuBd,MAAM,CAACE,OAA9B,CAAf;MACH;;MAEDV,KAAK,CAACK,SAAN,GAAkBa,YAAlB;MACAlB,KAAK,CAACI,WAAN,GAAoBK,kBAApB;IAEH;;EAvBK;AAHgB,CAAD,CAA7B;AA8BA,MAAMc,KAAK,GAAG/B,cAAc,CAAC;EACzBgC,OAAO,EAAE;IACLC,UAAU,EAAE7B,eAAe,CAAC4B,OADvB;IAELE,IAAI,EAAEpB,SAAS,CAACkB;EAFX;AADgB,CAAD,CAA5B;AAOA,OAAO,MAAMG,WAAW,GAAG/B,eAAe,CAACgC,OAApC;AACP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}